<h1><%= ts('new.record', :what => 'Text-Website') %></h1>
<%= error_messages_for :medium %>
<%= error_messages_for :document %>
<%= form_for(:medium, :url => documents_path, :html => {:multipart => true}) do |f| %>
      <p><b><%= Typescript.human_attribute_name('uploaded_data').s %></b> (<%= ts 'document.description.typescript'.s %>)<br />
<%=   file_field :typescript, :uploaded_data %></p>
      <p><b><%= Typescript.human_attribute_name('thumbnail').s %></b> (<%= ts 'document.description.preview'.s %>)<br />
<%=   file_field :thumbnail, :uploaded_data %></p>
      <p><b><%= @medium.class.human_attribute_name(:photographer).s %></b><br />
<%=   f.collection_select(:photographer_id, @photographers, :id, :fullname, { :include_blank => true }, language_options) %> (<%= link_to ts('new.record', :what => AuthenticatedSystem::Person.model_name.human), new_authenticated_system_person_path, { :target => '_blank' } %>)</p>
      <p><b><%= @medium.class.human_attribute_name(:capture_device_model).s %></b><br />
<%=   f.select(:capture_device_model_id, @capture_device_models.collect {|m| [ "#{h(m.capture_device_maker.title)} - #{h(m.title)}", m.id ] }, { :include_blank => true }) %> (<%= link_to ts('manage.record', :what => CaptureDeviceMaker.model_name.human), capture_device_makers_path, { :target => '_blank' } %>)</p>
<%=   render :partial => 'media/form', :locals => {:f => f} %>
      <p><%= globalized_submit_tag 'creat.e.this' %></p>
<%  end %>
<p><%= link_to ts('back.to', :what => t('all.records', :what => Medium.model_name.human(:count => :many))), media_path %></p>